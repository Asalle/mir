systems: [ubuntu-18.04*]
variants: [armhf]

summary: Build Ubuntu packages for Raspberry Pi

execute: |
    # Get any out-of-archive dependencies
    # (Currently just libnvidia-egl-wayland-dev)
    for repo in ppa:mir-team/{release,dev}; do
        add-apt-repository --yes --update ${repo} || add-apt-repository --yes --remove ${repo}
    done

    apt-get update

    # to get dpkg-architecture and mk-build-deps
    apt-get install \
      --yes \
      --no-install-recommends \
      devscripts \
      dpkg-dev \
      equivs

    dpkg --add-architecture armhf

    # limit existing apt sources to build architecture
    sed -i "s/^deb \(\[arch=.*\] \)\?/deb [arch=$(dpkg-architecture -q DEB_BUILD_ARCH)] /" \
      /etc/apt/sources.list

    # add host architecture apt sources
    printf "deb [arch=armhf] http://ports.ubuntu.com/ubuntu-ports %s main multiverse universe restricted\n" \
      $(lsb_release -sc){,-security,-updates} \
    > /etc/apt/sources.list.d/cross-armhf.list

    apt-get update

    cd $SPREAD_PATH

    # install dependencies
    mk-build-deps \
      --install \
      --host-arch armhf \
      --tool "apt-get --yes -o Debug::pkgProblemResolver=yes"

    apt-get --yes install capnproto:amd64

    # Install rpi-userland
    snap install --edge rpi-userland

    MIR_BUILD_DIR=$(mktemp -d)

    export CC=/usr/bin/arm-linux-gnueabihf-gcc
    export CXX=/usr/bin/arm-linux-gnueabihf-g++
    # Prepend the normal sysroot so that we pick up as much as possible from the standard environment
    export PKG_CONFIG_PATH=/usr/lib/arm-linux-gnueabihf/pkgconfig:/snap/rpi-userland/current/opt/vc/lib/pkgconfig

    cmake -H$SPREAD_PATH -B$MIR_BUILD_DIR -DCMAKE_BUILD_TYPE=Debug -DMIR_PLATFORM="rpi-dispmanx"
    cmake --build $MIR_BUILD_DIR -- -j`nproc` VERBOSE=1
